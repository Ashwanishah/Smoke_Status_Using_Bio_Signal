from flask_wtf import FlaskForm
import pandas as pd
from wtforms import (SelectField,DateField,SubmitField)
from wtforms.validators import DataRequired

train=pd.read_csv("Binary_Classification_of_smoke_status/Binary Prediction of Smoker Status using Bio-Signals/train.csv")
X_data=train.drop(["smoking"],axis=1)

class InputFormSmoke(FlaskForm):
    age=SelectField(
        label="age",
        choices=X_data["age"].unique().tolist(),
        validators=[DataRequired()]
    )
    height_cm=SelectField(
        label="height_cm",
        choices=X_data["height_cm"].unique().tolist(),
        validators=[DataRequired()]
    )
    weight_kg=SelectField(
        label="weight_kg",
        choices=X_data["weight_kg"].unique().tolist(),
        validators=[DataRequired()]
    )
    waist_cm=SelectField(
        label="waist_cm",
        choices=X_data["waist_cm"].unique().tolist(),
        validators=[DataRequired()]
    )
    eyesight_left=SelectField(
        label="eyesight_left",
        choices=X_data["eyesight_left"].unique().tolist(),
        validators=[DataRequired()]
    )
    eyesight_right=SelectField(
        label="eyesight_right",
        choices=X_data["eyesight_right"].unique().tolist(),
        validators=[DataRequired()]
    )
    hearing_left=SelectField(
        label="hearing_left",
        choices=X_data["hearing_left"].unique().tolist(),
        validators=[DataRequired()]
    )
    hearing_right=SelectField(
        label="hearing_right",
        choices=X_data["hearing_right"].unique().tolist(),
        validators=[DataRequired()]
    )
    systolic=SelectField(
        label="systolic",
        choices=X_data["systolic"].unique().tolist(),
        validators=[DataRequired()]
    )
    relaxation=SelectField(
        label="relaxation",
        choices=X_data["relaxation"].unique().tolist(),
        validators=[DataRequired()]
    )
    fasting_blood_sugar=SelectField(
        label="fasting_blood_sugar",
        choices=X_data["fasting_blood_sugar"].unique().tolist(),
        validators=[DataRequired()]
    )
    Cholesterol=SelectField(
        label="Cholesterol",
        choices=X_data["Cholesterol"].unique().tolist(),
        validators=[DataRequired()]
    )
    triglyceride=SelectField(
        label="triglyceride",
        choices=X_data["triglyceride"].unique().tolist(),
        validators=[DataRequired()]
    )
    HDL=SelectField(
        label="HDL",
        choices=X_data["HDL"].unique().tolist(),
        validators=[DataRequired()]
    )
    LDL=SelectField(
        label="LDL",
        choices=X_data["LDL"].unique().tolist(),
        validators=[DataRequired()]
    )
    hemoglobin=SelectField(
        label="hemoglobin",
        choices=X_data["hemoglobin"].unique().tolist(),
        validators=[DataRequired()]
    )
    Urine_protein=SelectField(
        label="Urine_protein",
        choices=X_data["Urine_protein"].unique().tolist(),
        validators=[DataRequired()]
    )
    serum_creatinine=SelectField(
        label="serum_creatinine",
        choices=X_data["serum_creatinine"].unique().tolist(),
        validators=[DataRequired()]
    )
    AST=SelectField(
        label="AST",
        choices=X_data["AST"].unique().tolist(),
        validators=[DataRequired()]
    )
    ALT=SelectField(
        label="ALT",
        choices=X_data["ALT"].unique().tolist(),
        validators=[DataRequired()]
    )
    Gtp=SelectField(
        label="Gtp",
        choices=X_data["Gtp"].unique().tolist(),
        validators=[DataRequired()]
    )
    dental_caries=SelectField(
        label="dental_caries",
        choices=X_data["dental_caries"].unique().tolist(),
        validators=[DataRequired()]
    )
    submit=SubmitField("Predict")